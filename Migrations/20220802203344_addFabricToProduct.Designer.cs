// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using mvcApp.Configurations;

#nullable disable

namespace mvcApp.Migrations
{
    [DbContext(typeof(PostgresContext))]
    [Migration("20220802203344_addFabricToProduct")]
    partial class addFabricToProduct
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("mvcApp.Models.Fabric", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<bool>("AntiBilling")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("anti_billing");

                    b.Property<bool>("ButterySoft")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("buttery_soft");

                    b.Property<List<string>>("MaterialAndCare")
                        .HasColumnType("text[]")
                        .HasColumnName("material_and_care");

                    b.Property<bool>("Stretch")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("stretch");

                    b.Property<string>("WhyWeMadeThis")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("why_we_made_this");

                    b.HasKey("Name")
                        .HasName("pk_fabrics");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_fabrics_name");

                    b.ToTable("fabrics", (string)null);
                });

            modelBuilder.Entity("mvcApp.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("FabricName")
                        .HasColumnType("text")
                        .HasColumnName("fabric_name");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.Property<string>("Summary")
                        .HasColumnType("text")
                        .HasColumnName("summary");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_products");

                    b.HasIndex("FabricName")
                        .HasDatabaseName("ix_products_fabric_name");

                    b.ToTable("products", (string)null);
                });

            modelBuilder.Entity("mvcApp.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<string>("Role")
                        .HasColumnType("text")
                        .HasColumnName("role");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("ix_users_email");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("mvcApp.Models.Product", b =>
                {
                    b.HasOne("mvcApp.Models.Fabric", "Fabric")
                        .WithMany()
                        .HasForeignKey("FabricName")
                        .HasConstraintName("fk_products_fabrics_fabric_name");

                    b.Navigation("Fabric");
                });
#pragma warning restore 612, 618
        }
    }
}
